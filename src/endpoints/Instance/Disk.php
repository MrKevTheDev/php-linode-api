<?php

namespace HnhDigital\LinodeApi\Instance;

/*
 * This file is part of the PHP Linode API.
 *
 * (c) H&H|Digital <hello@hnh.digital>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

use HnhDigital\LinodeApi\Api;

/**
 * This is the Disk class.
 *
 * This file is automatically generated.
 *
 * @link https://developers.linode.com/v4/reference/endpoints/linode/instances/$id/disks/$id
 * @author Rocco Howard <rocco@hnh.digital>
 */
class Disk extends Api
{
    /**
     * Endpoint.
     *
     * @var string
     */
    protected $endpoint = 'linode/instances/%s/disks/%s';

    /**
     * Endpoint placeholders.
     *
     * @var array
     */
    protected $endpoint_placeholders = [];

    /**
     * linode_id.
     *
     * @var integer
     */
    protected $linode_id;
    /**
     * disk_id.
     *
     * @var integer
     */
    protected $disk_id;

    /**
     * Constructor.
     *
     * @return void
     */
    public function __construct($linode_id, $disk_id, $load = true)
    {
        $this->linode_id = $linode_id;
        $this->disk_id = $disk_id;
        $this->endpoint_placeholders = [$linode_id, $disk_id];
    }

    /**
     * Returns information about this disk.
     *
     * @link https://developers.linode.com/v4/reference/endpoints/linode/instances/$id/disks/$id#GET
     *
     * @return array
     */
    public function get()
    {
        return $this->call('get', '');
    }

    /**
     * Updates a disk's metadata.
     *
     * @param array $optional 
     *      - [label] (string) 
     * 
     * @link https://developers.linode.com/v4/reference/endpoints/linode/instances/$id/disks/$id#PUT
     *
     * @return void
     */
    public function update($optional)
    {
        return $this->call('put', "", $optional);
    }

    /**
     * Deletes this disk. This action cannot be undone.
     *
     * @link https://developers.linode.com/v4/reference/endpoints/linode/instances/$id/disks/$id#DELETE
     *
     * @return void
     */
    public function delete()
    {
        return $this->call('delete', "");
    }

}
