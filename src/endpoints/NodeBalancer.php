<?php

namespace HnhDigital\LinodeApi;

/*
 * This file is part of the PHP Linode API.
 *
 * (c) H&H|Digital <hello@hnh.digital>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

use HnhDigital\LinodeApi\Foundation\Base;

/**
 * This is the NodeBalancer class.
 *
 * This file is automatically generated.
 *
 * @link https://developers.linode.com/v4/reference/endpoints/nodebalancers/$id
 *
 * @author Rocco Howard <rocco@hnh.digital>
 */
class NodeBalancer extends Base
{
    /**
     * Endpoint.
     *
     * @var string
     */
    protected $endpoint = 'nodebalancers/%s';
    /**
     * Loadbalancer Id.
     *
     * @var int
     */
    protected $loadbalancer_id;

    /**
     * Constructor.
     *
     * @return void
     */
    public function __construct($loadbalancer_id)
    {
        $this->loadbalancer_id = $loadbalancer_id;
        parent::__construct($loadbalancer_id);
    }

    /**
     * Returns information about this NodeBalancer.
     *
     * @link https://developers.linode.com/v4/reference/endpoints/nodebalancers/$id#GET
     *
     * @return array
     */
    public function get()
    {
        return $this->apiCall('get', '');
    }

    /**
     * Modifies this NodeBalancer.
     *
     * @param array $optional
     *                        - [region] (json) A region ID to provision this NodeBalancer in.
     *                        - [label] (string) The label to assign this NodeBalancer. Defaults to "nodebalancer" followed by its ID.
     *                        - [client_conn_throttle] (string) To help mitigate abuse, throttle connections per second, per client. 0 to disable, max of 20.
     *
     * @link https://developers.linode.com/v4/reference/endpoints/nodebalancers/$id#PUT
     *
     * @return void
     */
    public function update($optional = [])
    {
        return $this->call('put', '', $optional);
    }

    /**
     * Deletes this NodeBalancer and all associated configs and nodes. This action cannot be undone.
     *
     * @link https://developers.linode.com/v4/reference/endpoints/nodebalancers/$id#DELETE
     *
     * @return void
     */
    public function delete()
    {
        return $this->call('delete', '');
    }
}
